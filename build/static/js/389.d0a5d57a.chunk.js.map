{"version":3,"file":"static/js/389.d0a5d57a.chunk.js","mappings":"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","sources":["app/pages/accounts/account-form.tsx"],"sourcesContent":["import { _account } from \"app/apis\";\nimport { PageTitle, RoleLayout, SelectRole, Snack, SwitchButton, UploadBtn } from \"app/components\";\nimport { RAccount } from \"app/constants\";\nimport { useMedia, useMessage, usePermission } from \"app/hooks\";\nimport { QR_KEY } from \"configs\";\nimport { useFormik } from \"formik\";\nimport { ChangeEvent, Fragment } from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { LoadingButton } from \"@mui/lab\";\nimport * as Yup from \"yup\"\nimport { validate } from \"app/utils\";\nimport './style.scss'\nimport { AccountBody, Role } from \"app/models\";\n\nfunction AccountForm() {\n  const { id } = useParams()\n  const { handlePostMedia, isLoading: isLoadingMedia } = useMedia()\n  const { notification, result, onClose } = useMessage()\n  const { resolve } = usePermission(RAccount.GET_ID)\n  const { isLoading, mutate } = useMutation({\n    mutationFn: (body: AccountBody) => id ? _account.update(id, body) : _account.create(body),\n    onSuccess: () => result({\n      message: id ? 'Cập nhật thành công' : 'Tạo mới thành công',\n      color: 'success',\n    }),\n    onError: () => result({ message: 'Có lỗi xảy ra', color: 'error' })\n  })\n  const { touched, errors, values, handleChange, handleSubmit, setFieldValue } = useFormik({\n    initialValues: {\n      fullname: '',\n      email: '',\n      telephone: '',\n      avatar: undefined,\n      status: false,\n      password: '',\n      password_confirm: '',\n      roles: []\n    },\n    validationSchema: Yup.object({\n      fullname: Yup.string().required(\"Vui lòng nhập họ và tên\"),\n      email: Yup.string().required(\"Vui lòng nhập email\").matches(validate.email, { message: 'Nhập đúng dạng dạng email' }),\n      telephone: Yup.string().required(\"Vui lòng nhập số điện thoại\"),\n      password: !id ? Yup.string().required(\"Vui lòng nhập mật khẩu\") : Yup.string(),\n      password_confirm: !id ? Yup.string().required('Vui lòng nhập lại mật khẩu').oneOf([Yup.ref(\"password\"), null], \"Mật khẩu không khớp\") : Yup.string(),\n    }),\n    onSubmit: (values) => {\n      mutate({\n        ...values,\n        roles: values.roles.map((i: Role) => i.id)\n      })\n    }\n  })\n  const { refetch, isFetching } = useQuery({\n    queryKey: [QR_KEY.account, id],\n    queryFn: () => _account.findById(id || 0),\n    enabled: !!(id && resolve),\n    onSuccess: (data) => {\n      setFieldValue('fullname', data.context.fullname)\n      setFieldValue('status', data.context.status)\n      setFieldValue('email', data.context.email)\n      setFieldValue('telephone', data.context.telephone)\n      setFieldValue('avatar', data.context.avatar)\n      setFieldValue('roles', data.context.roles?.map(i => i.role))\n    }\n  })\n  const onChangeMedia = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostMedia({\n      e,\n      resetOriginalResult: true,\n      callBack: (data) => setFieldValue('avatar', data[0].original_url)\n    })\n  }\n\n  return (\n    <RoleLayout permissionPath={id ? RAccount.PUT : RAccount.POST} isNavigate>\n      <Fragment>\n        <PageTitle title={id ? \"Thay đổi thông tin\" : \"Tạo mới tài khoản\"} />\n        <Snack\n          message={notification.message}\n          open={notification.openAlert}\n          onClose={onClose}\n          severity={notification.color}\n        />\n        <div className=\"card p-4\">\n          <form autoComplete=\"off\" onSubmit={handleSubmit} className=\"py-4 px-8 form\">\n            <div className=\"my-3 d-flex justify-content-center\">\n              <div className=\"avatar-image\">\n                <img src={values.avatar} alt=\"\" />\n                <div className=\"btn-avatar-cnt\">\n                  <UploadBtn loading={isLoadingMedia} id=\"file_avatar\" onChange={onChangeMedia} />\n                </div>\n              </div>\n            </div>\n            <div className=\"column my-3\">\n              <SwitchButton\n                label=\"Trạng thái\"\n                value={values.status}\n                onChange={(e) => setFieldValue('status', e.target.checked)}\n              />\n            </div>\n            <div className=\"column my-3\">\n              <label className=\"form-label required\">Họ và tên</label>\n              <input name='fullname' value={values.fullname} onChange={handleChange} type=\"text\"\n                className=\"form-control form-control-solid\" placeholder=\"Họ và tên\"\n              />\n              {\n                touched.fullname && errors.fullname &&\n                <span className=\"text-danger fs-8\">{errors.fullname}</span>\n              }\n            </div>\n            <div className=\"d-flex justify-content-between row-2\">\n              <div className=\"column-2 my-3\">\n                <label className=\"form-label required\">Email</label>\n                <input type=\"text\" name=\"email\" value={values.email} onChange={handleChange}\n                  className=\"form-control form-control-solid\" placeholder=\"Email\"\n                />\n                {\n                  touched.email && errors.email &&\n                  <span className=\"text-danger fs-8\">{errors.email}</span>\n                }\n              </div>\n              <div className=\"column-2 my-3\">\n                <label className=\"form-label required\">Số điện thoại</label>\n                <input\n                  type=\"text\" name=\"telephone\" value={values.telephone} onChange={handleChange}\n                  className=\"form-control form-control-solid\" placeholder=\"Số điện thoại\"\n                />\n                {\n                  touched.telephone && errors.telephone &&\n                  <span className=\"text-danger fs-8\">{errors.telephone}</span>\n                }\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-between row-2\">\n              <div className=\"column-2 my-3\">\n                <label className=\"form-label required\">Mật khẩu</label>\n                <input\n                  disabled={!!id} type=\"password\" className=\"form-control form-control-solid\" placeholder=\"Mật khẩu\"\n                  name=\"password\" value={values.password} onChange={handleChange}\n                />\n                {\n                  touched.password && errors.password &&\n                  <span className=\"text-danger fs-8\">{errors.password}</span>\n                }\n              </div>\n              <div className=\"column-2 my-3\">\n                <label className=\"form-label required\">Nhập lại mật khẩu</label>\n                <input\n                  disabled={!!id} type=\"password\" className=\"form-control form-control-solid\" placeholder=\"Nhập lại mật khẩu\"\n                  name=\"password_confirm\" value={values.password_confirm} onChange={handleChange}\n                />\n                {\n                  touched.password_confirm && errors.password_confirm &&\n                  <span className=\"text-danger fs-8\">{errors.password_confirm}</span>\n                }\n              </div>\n            </div>\n            <div className=\"column my-3\">\n              <SelectRole\n                value={values.roles}\n                onChange={(e) => setFieldValue('roles', e)}\n              />\n            </div>\n            <div className=\"d-flex justify-content-end mt-6\">\n              <LoadingButton loading={isLoading} type=\"submit\" color=\"success\" variant=\"contained\">\n                Lưu\n              </LoadingButton>\n              {\n                id &&\n                <LoadingButton loading={isFetching} onClick={() => refetch()} className=\"mx-2\" type=\"button\" variant=\"outlined\">\n                  Khôi phục\n                </LoadingButton>\n              }\n            </div>\n          </form>\n        </div>\n      </Fragment>\n    </RoleLayout>\n  );\n}\n\nexport default AccountForm;"],"names":["id","useParams","useMedia","handlePostMedia","isLoadingMedia","isLoading","useMessage","notification","result","onClose","resolve","usePermission","RAccount","useMutation","mutationFn","body","_account","onSuccess","message","color","onError","mutate","useFormik","initialValues","fullname","email","telephone","avatar","undefined","status","password","password_confirm","roles","validationSchema","Yup","required","matches","validate","oneOf","onSubmit","values","map","i","touched","errors","handleChange","handleSubmit","setFieldValue","useQuery","queryKey","QR_KEY","queryFn","enabled","data","context","role","refetch","isFetching","permissionPath","isNavigate","Fragment","title","open","openAlert","severity","className","autoComplete","src","alt","loading","onChange","e","resetOriginalResult","callBack","original_url","label","value","target","checked","name","type","placeholder","disabled","LoadingButton","variant","onClick"],"sourceRoot":""}