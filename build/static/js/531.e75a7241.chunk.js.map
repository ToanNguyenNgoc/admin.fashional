{"version":3,"file":"static/js/531.e75a7241.chunk.js","mappings":"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","sources":["app/pages/categories/category-form.tsx"],"sourcesContent":["import { FormControl, MenuItem, Select, SelectChangeEvent, TextField } from \"@mui/material\";\nimport { _category, _tag } from \"app/apis\";\nimport { PageTitle, RoleLayout, Snack, SwitchButton } from \"app/components\";\nimport { RCategory } from \"app/constants\";\nimport { QR_KEY } from \"configs\";\nimport { FC, useCallback, useState } from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { debounce } from \"lodash\"\nimport { useFormik } from \"formik\";\nimport { LoadingButton } from \"@mui/lab\";\nimport * as Yup from \"yup\"\nimport { CategoryBody } from \"app/models\";\nimport { useMessage } from \"app/hooks\";\nimport { AxiosError } from \"axios\";\n\nfunction CategoryForm() {\n  const { id } = useParams()\n  const { result, notification: { message, color, openAlert }, onClose } = useMessage()\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (body: CategoryBody) => id ? _category.update(id, body) : _category.create(body),\n    onSuccess: () => result({\n      message: id ? \"Cập nhật thành công\" : \"Tạo mới thành công\",\n      color: \"success\"\n    }),\n    onError: (err) => {\n      const error = err as AxiosError\n      result({\n        message: error.response?.data.message || 'Có lỗi xảy ra',\n        color: 'error'\n      })\n    }\n  })\n  const { values, errors, touched, setFieldValue, handleChange, handleSubmit } = useFormik({\n    initialValues: {\n      name: '',\n      tag_id: '',\n      status: true\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Nhập tên\"),\n      tag_id: Yup.number().required(\"Chọn tag\")\n    }),\n    onSubmit: (values) => mutate(values)\n  })\n  const { refetch, isFetching } = useQuery({\n    queryKey: [QR_KEY.category, id],\n    queryFn: () => _category.findById(id || 0),\n    enabled: !!id,\n    onSuccess: (data) => {\n      setFieldValue('name', data.context.name)\n      setFieldValue('tag_id', data.context.tag_id)\n      setFieldValue('status', data.context.status)\n    }\n  })\n  return (\n    <RoleLayout permissionPath={id ? RCategory.PUT : RCategory.POST} isNavigate>\n      <>\n        <PageTitle title={id ? \"Thay đổi danh mục\" : \"Tạo mới danh mục\"} />\n        <Snack open={openAlert} message={message} severity={color} onClose={onClose} />\n        <div className=\"card p-4\">\n          <form onSubmit={handleSubmit} className=\"form\">\n            <div className=\"column my-3\">\n              <SwitchButton label=\"Trạng thái\" value={values.status} onChange={(e) => setFieldValue('status', e.target.checked)} />\n            </div>\n            <div className=\"column my-3\">\n              <label className=\"form-label required\">Tên chi danh mục</label>\n              <input type=\"text\"\n                name=\"name\" value={values.name} onChange={handleChange}\n                className=\"form-control form-control-solid\"\n              />\n              {\n                touched.name && errors.name &&\n                <span className=\"text-danger fs-8\">{errors.name}</span>\n              }\n            </div>\n            <div className=\"column  my-3\">\n              <label className=\"form-label required\">Tag</label>\n              <div className=\"column\">\n                <SelectTag value={values.tag_id} onChange={(e) => setFieldValue('tag_id', e.target.value)} />\n              </div>\n              {\n                touched.tag_id && errors.tag_id &&\n                <span className=\"text-danger fs-8\">{errors.tag_id}</span>\n              }\n            </div>\n            <div className=\"d-flex justify-content-end mt-6\">\n              <LoadingButton loading={isLoading} type=\"submit\" color=\"success\" variant=\"contained\">\n                Lưu\n              </LoadingButton>\n              {\n                id &&\n                <LoadingButton onClick={() => refetch()} loading={isFetching} className=\"mx-2\" type=\"button\" variant=\"outlined\">\n                  Khôi phục\n                </LoadingButton>\n              }\n            </div>\n          </form>\n        </div>\n      </>\n    </RoleLayout>\n  );\n}\n\ninterface SelectTagProps {\n  value?: number | string;\n  onChange?: (e: SelectChangeEvent<string | number>) => void\n}\n\nconst SelectTag: FC<SelectTagProps> = ({ value, onChange = () => { } }) => {\n  const [search, setSearch] = useState('')\n  const { data: dataTags } = useQuery({\n    queryKey: [QR_KEY.tag, search],\n    queryFn: () => _tag.findAll({\n      'search': search,\n      'status': true\n    })\n  })\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onDebounce = useCallback(\n    debounce((keyword) => setSearch(keyword), 800),\n    []\n  );\n  return (\n    <FormControl sx={{ m: 1, minWidth: 250 }} size=\"small\">\n      <Select\n        labelId=\"demo-select-small-label\"\n        id=\"demo-select-small\"\n        size=\"small\"\n        value={value}\n        defaultValue={''}\n        onChange={onChange}\n      >\n        <TextField\n          size=\"small\" style={{ width: '100%' }} id=\"filled-basic\" variant=\"filled\"\n          placeholder=\"Tìm kiếm...\" onChange={(e) => onDebounce(e.target.value)}\n        />\n        {\n          dataTags?.context.data?.map(tag => (\n            <MenuItem key={tag.id} value={tag.id}>*{tag.name}</MenuItem>\n          ))\n        }\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default CategoryForm;"],"names":["SelectTag","value","onChange","useState","search","setSearch","dataTags","useQuery","queryKey","QR_KEY","queryFn","_tag","data","onDebounce","useCallback","debounce","keyword","sx","m","minWidth","size","labelId","id","defaultValue","style","width","variant","placeholder","e","target","context","map","tag","name","useParams","useMessage","result","notification","message","color","openAlert","onClose","useMutation","mutationFn","body","_category","onSuccess","onError","err","response","mutate","isLoading","useFormik","initialValues","tag_id","status","validationSchema","Yup","required","onSubmit","values","errors","touched","setFieldValue","handleChange","handleSubmit","enabled","refetch","isFetching","permissionPath","RCategory","isNavigate","title","open","severity","className","label","checked","type","loading","onClick"],"sourceRoot":""}