{"version":3,"file":"static/js/900.1a4edb53.chunk.js","mappings":"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","sources":["app/pages/tags/index.tsx"],"sourcesContent":["import { Button, FormControl, MenuItem, Select } from \"@mui/material\";\nimport { _tag } from \"app/apis\";\nimport { FaSpinner, PageTitle, RoleLayout, SwitchButton, XPagination } from \"app/components\";\nimport { RTag } from \"app/constants\";\nimport { usePermission } from \"app/hooks\";\nimport { QrTag, Tag, TagBody } from \"app/models\";\nimport { slugify } from \"app/utils\";\nimport { QR_KEY } from \"configs\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\nimport { FC, useRef } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\"\n\nconst scheme = Yup.object({\n  name:Yup.string().required(),\n  type:Yup.string().required()\n})\n\nfunction TagPage() {\n  const refForm = useRef<HTMLTableSectionElement>(null)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const query = queryString.parse(location.search) as QrTag\n  const { data } = useQuery({\n    queryKey: [QR_KEY.tag, query],\n    queryFn: () => _tag.findAll({\n      'page': query.page || 1,\n      'limit': 15\n    })\n  })\n  const onChangePage = (p: number) => {\n    const newQuery = {\n      ...query,\n      page: p\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(newQuery)\n    })\n  }\n  return (\n    <RoleLayout permissionPath={RTag.GET} isNavigate >\n      <>\n        <PageTitle title=\"Tag\">\n          <RoleLayout permissionPath={RTag.POST}>\n            <Button\n              onClick={() => {\n                refForm.current?.classList.toggle('d-block');\n                refForm.current?.classList.toggle('d-none')\n              }}\n              size=\"medium\" color=\"primary\"\n              variant=\"contained\" >\n              Tạo mới tag\n            </Button>\n          </RoleLayout>\n        </PageTitle>\n        <div className=\"card\">\n          <div className='card-header border-0 pt-5'>\n            <h3 className='card-title align-items-start flex-column'>\n              <span className='text-muted mt-1 fw-semobold fs-7'>{data?.context.total} tags</span>\n            </h3>\n          </div>\n          <div className='card-body py-3'>\n            <div className='table-responsive'>\n              <table className=\"table align-middle gs-0 gy-4\">\n                <thead><tr className='fw-bold text-muted bg-light'></tr> </thead>\n                <tbody className=\"d-none\" ref={refForm}>\n                  <TagForm query={query} />\n                </tbody>\n              </table>\n              <table className='table align-middle gs-0 gy-4'>\n                <thead>\n                  <tr className='fw-bold text-muted bg-light'>\n                    <th className='ps-4 min-w-200px rounded-start'>Tên</th>\n                    <th className='min-w-125px'>Slugify</th>\n                    <th className='min-w-125px'>Type</th>\n                    <th className='min-w-125px'>Trạng thái</th>\n                    <th className='min-w-100px'>Cập nhật</th>\n                    <th className='min-w-100px'>Ngày tạo</th>\n                    <th className='min-w-200px text-end rounded-end'></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data?.context.data?.map(item => (\n                      <TagItem key={item.id} tag={item} query={query} />\n                    ))\n                  }\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-end\">\n            <XPagination\n              totalPage={data?.context.total_page ?? 1}\n              onChangePage={onChangePage}\n              defaultPage={query?.page ?? 1}\n            />\n          </div>\n        </div>\n      </>\n    </RoleLayout>\n  );\n}\nconst TagForm: FC<{ query: QrTag }> = ({ query }) => {\n  const client = useQueryClient()\n  const { mutateAsync, isLoading } = useMutation({\n    mutationFn: (body: TagBody) => _tag.create(body),\n    onSuccess: () => {\n      client.invalidateQueries([QR_KEY.tag, query])\n    }\n  })\n  const { values, setFieldValue, handleChange, handleSubmit, resetForm } = useFormik({\n    initialValues: {\n      name: \"\", type: \"\", status: true\n    },\n    validationSchema:scheme,\n    onSubmit: async (values) => {\n      await mutateAsync(values)\n      resetForm()\n    }\n  })\n  return (\n    <tr>\n      <td>\n        <div className='d-flex align-items-center'>\n          <input\n            type=\"text\" className=\"form-control form-control-solid\"\n            name=\"name\" value={values.name} onChange={handleChange} placeholder=\"Tên tag...\"\n          />\n        </div>\n      </td>\n      <td>\n        <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n          <Select size=\"small\" value={values.type} onChange={(e) => setFieldValue('type', e.target.value)} >\n            <MenuItem value={\"COLLAB\"}>COLLAB</MenuItem>\n            <MenuItem value={\"SHOP\"}>SHOP</MenuItem>\n          </Select>\n        </FormControl>\n      </td>\n      <td>\n        <RoleLayout permissionPath={RTag.PUT}>\n          <button type=\"submit\" onClick={() => handleSubmit()} className=\"btn btn-icon btn-success me-1 rounded-circle btn-sm\">\n            {isLoading ? <FaSpinner /> : <i className=\"fa fa-check fs-6\"></i>}\n          </button>\n        </RoleLayout>\n      </td>\n    </tr>\n  )\n}\nconst TagItem: FC<{ tag: Tag, query: QrTag }> = ({ tag, query }) => {\n  const { resolve: resolveEdit } = usePermission(RTag.PUT)\n  const client = useQueryClient()\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (body: TagBody) => _tag.update(tag.id, body)\n  })\n  const { mutate: mutateDelete, isLoading: isLoadingDelete } = useMutation({\n    mutationFn: () => _tag.delete(tag.id),\n    onSuccess: () => {\n      client.invalidateQueries([QR_KEY.tag, query])\n    }\n  })\n  const { values, setFieldValue, handleChange, handleSubmit } = useFormik({\n    initialValues: {\n      name: tag.name, type: tag.type, status: tag.status\n    },\n    validationSchema:scheme,\n    onSubmit: (values) => mutate(values)\n  })\n  const onChangeStatus = (check: boolean) => {\n    if (resolveEdit) {\n      setFieldValue('status', check)\n      mutate({ status: check })\n    }\n  }\n  return (\n    <tr>\n      <td>\n        <div className='d-flex align-items-center'>\n          <input\n            disabled={!resolveEdit}\n            value={values.name} name=\"name\" onChange={handleChange}\n            type=\"text\" className=\"form-control form-control-solid\"\n          />\n        </div>\n      </td>\n      <td>\n        <span className=\"text-dark fw-bold d-block mb-1 fs-6\">\n          {slugify(values.name)}\n        </span>\n      </td>\n      <td>\n        <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n          <Select\n            size=\"small\" disabled={!resolveEdit}\n            value={values.type} onChange={(e) => setFieldValue('type', e.target.value)}\n          >\n            <MenuItem value={\"COLLAB\"}>COLLAB</MenuItem>\n            <MenuItem value={\"SHOP\"}>SHOP</MenuItem>\n          </Select>\n        </FormControl>\n      </td>\n      <td>\n        <SwitchButton value={values.status} onChange={(e) => onChangeStatus(e.target.checked)} />\n      </td>\n      <td>\n        <span className='text-muted fw-semobold text-muted d-block fs-7'>\n          {moment(tag.updated_at).format('DD/MM/YYYY')}\n        </span>\n      </td>\n      <td>\n        <span className='text-muted fw-semobold text-muted d-block fs-7'>\n          {moment(tag.created_at).format('DD/MM/YYYY')}\n        </span>\n      </td>\n      <td className='text-end'>\n        <RoleLayout permissionPath={RTag.PUT}>\n          <button type=\"submit\" onClick={() => handleSubmit()} className=\"btn btn-icon btn-success me-1 rounded-circle btn-sm\">\n            {isLoading ? <FaSpinner /> : <i className=\"fa fa-check fs-6\"></i>}\n          </button>\n        </RoleLayout>\n        <RoleLayout permissionPath={RTag.DELETE}>\n          <button onClick={() => mutateDelete()} className=\"btn btn-icon btn-danger me-1 rounded-circle btn-sm\">\n            {isLoadingDelete ? <FaSpinner /> : <i className=\"bi bi-trash-fill fs-6\"></i>}\n          </button>\n        </RoleLayout>\n      </td>\n    </tr>\n  )\n}\n\nexport default TagPage;"],"names":["scheme","Yup","name","required","type","TagForm","query","client","useQueryClient","useMutation","mutationFn","body","_tag","onSuccess","invalidateQueries","QR_KEY","mutateAsync","isLoading","useFormik","initialValues","status","validationSchema","onSubmit","values","resetForm","setFieldValue","handleChange","handleSubmit","className","value","onChange","placeholder","sx","m","minWidth","size","e","target","permissionPath","RTag","onClick","TagItem","tag","resolveEdit","usePermission","resolve","id","mutate","mutateDelete","isLoadingDelete","disabled","slugify","check","checked","moment","updated_at","format","created_at","refForm","useRef","location","useLocation","navigate","useNavigate","queryString","search","data","useQuery","queryKey","queryFn","page","isNavigate","title","current","classList","toggle","color","variant","context","total","ref","map","item","totalPage","total_page","onChangePage","p","newQuery","pathname","defaultPage"],"sourceRoot":""}