{"version":3,"file":"static/js/40.9357083b.chunk.js","mappings":"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","sources":["app/pages/products/module/product-media.tsx","app/pages/products/module/product-branch.tsx","app/pages/products/products-form.tsx"],"sourcesContent":["import { LoadingButton } from \"@mui/lab\"\nimport { Chip, CircularProgress } from \"@mui/material\"\nimport { _product } from \"app/apis\"\nimport { UploadBtn } from \"app/components\"\nimport { useMedia } from \"app/hooks\"\nimport { Media } from \"app/models\"\nimport { QR_KEY } from \"configs\"\nimport { useFormik } from \"formik\"\nimport { ChangeEvent, FC } from \"react\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { useParams } from \"react-router-dom\"\nimport \"../style.scss\"\n\nexport const ProductMedia: FC = () => {\n  const { id } = useParams()\n  const { handlePostMedia } = useMedia()\n  const { values, setFieldValue } = useFormik<{ medias: Media[] }>({\n    initialValues: { medias: [] },\n    onSubmit: (values) => {}\n  })\n  const { refetch, isFetching } = useQuery({\n    queryKey: [QR_KEY.product_media, id],\n    queryFn: () => _product.findMedias(id || 0),\n    enabled: !!id,\n    onSuccess: (data) => setFieldValue('medias', data.context.data?.map(i => i.media))\n  })\n  const onChangeMedia = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostMedia({\n      e,\n      callBack: (data) => {\n        setFieldValue('medias', [...values.medias, ...data])\n      }\n    })\n  }\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (body: { media_ids: number[] }) => _product.createProductMedias(id || 0, body),\n  })\n  const onRemoveMedia = async (id: number) => {\n    setFieldValue('medias', values.medias.filter(a => a.id !== id))\n    await _product.deleteProductMedias(id || 0, { media_ids: [id] })\n  }\n  return (\n    <div className=\"card p-4 my-4\">\n      <span className=\"text-dark fw-bold fs-6\">Thư viện ảnh</span>\n      <div className=\"mt-2 product-media\">\n        {\n          values.medias.map((i, index) => (\n            <div key={index} className=\"media-item\">\n              {i.mime_type === \"video/mp4\" ? <video controls ><source src={i.original_url} /></video> : <img src={i.original_url} alt=\"\" />}\n              {\n                i.id > 0 ?\n                  <Chip color=\"error\" variant=\"filled\"\n                    onDelete={() => onRemoveMedia(i.id)}\n                  />\n                  :\n                  <div className=\"item-image-load d-flex justify-content-center align-items-center\">\n                    <CircularProgress size={26} />\n                  </div>\n              }\n            </div>\n          ))\n        }\n        <div className=\"media-item d-flex justify-content-center align-items-center\">\n          <UploadBtn id=\"medias\" onChange={onChangeMedia} multi />\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-end mt-6\">\n        <LoadingButton\n          disabled={!!!id} onClick={() => mutate({ media_ids: values.medias.map(i => i.id) })}\n          loading={isLoading} type=\"button\" color=\"success\" variant=\"contained\"\n        >\n          Lưu\n        </LoadingButton>\n        {\n          id &&\n          <LoadingButton\n            disabled={!!!id}\n            onClick={() => refetch()} loading={isFetching} className=\"mx-2\" type=\"button\" variant=\"outlined\"\n          >\n            Khôi phục\n          </LoadingButton>\n        }\n      </div>\n    </div>\n  )\n}","import { LoadingButton } from \"@mui/lab\"\nimport { _product } from \"app/apis\"\nimport { FaSpinner, RoleLayout, SelectBranch, SwitchButton } from \"app/components\"\nimport { RProduct } from \"app/constants\"\nimport { usePermission } from \"app/hooks\"\nimport { ProductBranch } from \"app/models\"\nimport { QR_KEY } from \"configs\"\nimport { useFormik } from \"formik\"\nimport moment from \"moment\"\nimport { FC, useState } from \"react\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { useParams } from \"react-router-dom\"\nimport * as Yup from \"yup\"\n\nexport const ProductBranches: FC = () => {\n  const { id } = useParams()\n  const client = useQueryClient()\n  const { data } = useQuery({\n    queryKey: [QR_KEY.product_branch, id],\n    queryFn: () => _product.findBranches(id || 0),\n    enabled: !!id\n  })\n  const { mutateAsync, isLoading } = useMutation({\n    mutationFn: (body: { branch_id: number, quantity: number }) => _product.createBranch(id || 0, body),\n    onSuccess: () => client.invalidateQueries([QR_KEY.product_branch, id])\n  })\n  let { values, setFieldValue, handleChange, handleSubmit, resetForm } = useFormik({\n    initialValues: ({ branch_id: '', quantity: 1 }),\n    validationSchema: Yup.object({\n      branch_id: Yup.string().required(),\n      quantity: Yup.number().required()\n    }),\n    onSubmit: async (values) => {\n      await mutateAsync({ ...values, branch_id: Number(values.branch_id) })\n      resetForm()\n    }\n  })\n  return (\n    <div className=\"card p-4 my-4\">\n      <span className=\"text-dark fw-bold fs-6\">Chi nhánh</span>\n      <div className='card-body py-3'>\n        <div className='table-responsive'>\n          <RoleLayout permissionPath={RProduct.POST_BRANCH}>\n            <form className=\"d-flex align-items-center mb-4\" onSubmit={handleSubmit}>\n              <SelectBranch value={values.branch_id || ''} onChange={(e) => setFieldValue('branch_id', e.target.value)} />\n              <input\n                type=\"number\" className=\"form-control form-control-solid py-2 px-3\" style={{ width: '120px', margin: '0px 8px' }}\n                value={values.quantity} name=\"quantity\" onChange={handleChange}\n              />\n              <LoadingButton\n                loading={isLoading} disabled={!!!id}\n                size=\"medium\" color=\"success\"\n                variant=\"contained\" type=\"submit\"\n              >\n                Thêm chi nhánh\n              </LoadingButton>\n            </form>\n          </RoleLayout>\n          <table className='table align-middle gs-0 gy-4'>\n            <thead>\n              <tr className='fw-bold text-muted bg-light'>\n                <th className='ps-4 min-w-300px rounded-start'>Chi nhánh</th>\n                <th className='min-w-125px'>Số lượng</th>\n                <th className='min-w-125px'>Trạng thái</th>\n                <th className='min-w-200px'>Ngày tạo</th>\n                <th className='min-w-200px text-end rounded-end'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                data?.context.data?.map((i, index) => (\n                  <Tr key={index} item={i} />\n                ))\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst Tr: FC<{ item: ProductBranch }> = ({ item }) => {\n  const { id } = useParams()\n  const client = useQueryClient()\n  const [quantity, setQuantity] = useState(item.quantity)\n  const { resolve } = usePermission(RProduct.PUT_BRANCH)\n  const { mutate: mutateUpdate, isLoading } = useMutation({\n    mutationFn: (body: { quantity?: number, status?: boolean }) => _product.updateBranch(\n      id || 0, item.branch.id, body\n    ),\n    onSuccess: () => {\n      client.invalidateQueries([QR_KEY.product_branch, id])\n    }\n  })\n  const { mutate: mutateDelete, isLoading: isLoadingDelete } = useMutation({\n    mutationFn: () => _product.deleteBranch(id || 0, item.branch.id),\n    onSuccess: () => client.invalidateQueries([QR_KEY.product_branch, id])\n  })\n\n  return (\n    <tr>\n      <td>\n        <span className=\"text-dark fw-bold mb-1 fs-6\">\n          {item.branch?.name}\n        </span>\n      </td>\n      <td>\n        <input\n          type=\"number\" className=\"form-control form-control-solid\"\n          value={quantity} onChange={(e) => setQuantity(Number(e.target.value))}\n        />\n      </td>\n      <td>\n        <SwitchButton disable={!resolve} value={item.status} onChange={(e) => mutateUpdate({ status: e.target.checked })} />\n      </td>\n      <td>\n        <span className='text-muted fw-semobold text-muted d-block fs-7'>\n          {moment(item.created_at).format('DD/MM/YYYY')}\n        </span>\n      </td>\n      <td className='text-end'>\n        <RoleLayout permissionPath={RProduct.PUT_BRANCH}>\n          <button type=\"button\" onClick={() => mutateUpdate({\n            quantity: quantity\n          })}\n            className=\"btn btn-icon btn-success me-1 rounded-circle btn-sm\">\n            {isLoading ? <FaSpinner /> : <i className=\"fa fa-check fs-6\"></i>}\n          </button>\n        </RoleLayout>\n        <RoleLayout permissionPath={RProduct.DELETE_BRANCH}>\n          <button onClick={() => mutateDelete()} className=\"btn btn-icon btn-danger me-1 rounded-circle btn-sm\">\n            {isLoadingDelete ? <FaSpinner /> : <i className=\"bi bi-trash-fill fs-6\"></i>}\n          </button>\n        </RoleLayout>\n      </td>\n    </tr>\n  )\n}","import { PageTitle, RoleLayout, SelectCategory, SelectTag, Snack, SwitchButton, UploadBtn } from \"app/components\";\nimport { PProduct, RProduct } from \"app/constants\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport {  ProductBody } from \"app/models\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { QR_KEY } from \"configs\";\nimport { _product } from \"app/apis\";\nimport { ChangeEvent, FC } from \"react\";\nimport { useMedia, useMessage } from \"app/hooks\";\nimport { LoadingButton } from \"@mui/lab\";\nimport \"./style.scss\"\nimport { AxiosError } from \"axios\";\nimport { pickBy, identity } from \"lodash\"\nimport { ProductBranches, ProductMedia } from \"./module\";\n\nfunction ProductForm() {\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const { result, notification: { message, color, openAlert }, onClose } = useMessage()\n  const { handlePostMedia, isLoading: isLoadingMedia } = useMedia()\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (body: ProductBody) => id ? _product.update(id, body) : _product.create(body),\n    onSuccess: (data) => {\n      result({\n        message: id ? \"Cập nhật thành công\" : \"Tạo mới thành công\",\n        color: \"success\"\n      })\n      if (!id)\n        setTimeout(() => { navigate(PProduct.update_id(data.context.id)) })\n    },\n    onError: (err) => {\n      const error = err as AxiosError\n      result({\n        message: error.response?.data.message || 'Có lỗi xảy ra',\n        color: 'error'\n      })\n    }\n  })\n  const { values, errors, touched, setFieldValue, handleChange, handleSubmit } = useFormik<ProductBody>({\n    initialValues: {\n      name: '',\n      status: true,\n      thumbnail_url: '',\n      price_original: undefined,\n      price: undefined,\n      price_special: undefined,\n      short_content: '',\n      tag_id: undefined,\n      category_id: undefined\n    },\n    onSubmit: (values) => {\n      const body = pickBy(values, identity)\n      mutate({ ...body, status: values.status })\n    }\n  })\n  const { isFetching, refetch } = useQuery({\n    queryKey: [QR_KEY.product, id],\n    queryFn: () => _product.findById(id || 0),\n    enabled: !!id,\n    onSuccess: (data) => {\n      const { name, thumbnail_url, status, price_original, price, price_special, short_content, tag_id, category_id } = data.context\n      setFieldValue('name', name)\n      setFieldValue('status', status)\n      setFieldValue('thumbnail_url', thumbnail_url)\n      setFieldValue('price_original', price_original)\n      setFieldValue('price', price)\n      setFieldValue('price_special', price_special)\n      setFieldValue('short_content', short_content)\n      setFieldValue('tag_id', tag_id)\n      setFieldValue('category_id', category_id)\n    }\n  })\n  const onChangeThumbnail = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostMedia({\n      e,\n      resetOriginalResult: true,\n      callBack: (data) => setFieldValue('thumbnail_url', data[0].original_url)\n    })\n  }\n  const onChangePriceOriginal = (e: ChangeEvent<HTMLInputElement>) => {\n    if (Number(e.target.value) >= 0) setFieldValue('price_original', Number(e.target.value))\n  }\n  const onChangePrice = (e: ChangeEvent<HTMLInputElement>) => {\n    if (Number(e.target.value) >= 0) setFieldValue('price', Number(e.target.value))\n  }\n  const onChangePriceSpecial = (e: ChangeEvent<HTMLInputElement>) => {\n    if (0 <= Number(e.target.value) && Number(e.target.value) <= Number(values.price))\n      setFieldValue('price_special', Number(e.target.value))\n  }\n  return (\n    <RoleLayout permissionPath={id ? RProduct.PUT : RProduct.POST}>\n      <>\n        <PageTitle title={id ? \"Thay đổi thông tin sản phẩm\" : \"\"} />\n        <Snack open={openAlert} message={message} severity={color} onClose={onClose} />\n        <div className=\"card p-4\">\n          <form onSubmit={handleSubmit} className=\"form\">\n            <div className=\"my-3 d-flex justify-content-center\">\n              <div className=\"avatar-image\">\n                <img src={values.thumbnail_url || ''} alt=\"\" />\n                <div className=\"btn-avatar-cnt\">\n                  <UploadBtn loading={isLoadingMedia} onChange={onChangeThumbnail} id=\"file_avatar\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"column my-3\">\n              <SwitchButton value={values.status} onChange={(e) => setFieldValue('status', e.target.checked)} label=\"Trạng thái\" />\n            </div>\n            <div className=\"column my-3\">\n              <label className=\"form-label required\">Tên sản phẩm</label>\n              <input\n                type=\"text\" className=\"form-control form-control-solid\"\n                name=\"name\" value={values.name} onChange={handleChange}\n              />\n            </div>\n            <div className=\"d-flex justify-content-between row-3\">\n              <div className=\"column my-3\">\n                <label className=\"form-label required\">Giá nhập</label>\n                <input\n                  type=\"number\" className=\"form-control form-control-solid\"\n                  name=\"price_original\" value={values.price_original || ''}\n                  onChange={onChangePriceOriginal}\n                />\n              </div>\n              <div className=\"column my-3\">\n                <label className=\"form-label required\">Giá bán</label>\n                <input\n                  type=\"text\" className=\"form-control form-control-solid\"\n                  name=\"price\" value={values.price || ''} onChange={onChangePrice}\n                />\n              </div>\n              <div className=\"column my-3\">\n                <label className=\"form-label required\">Giá ưu đãi</label>\n                <input\n                  type=\"text\" className=\"form-control form-control-solid\"\n                  name=\"price_special\" value={values.price_special || ''} onChange={onChangePriceSpecial}\n                />\n              </div>\n            </div>\n            <div className=\"column my-3\">\n              <label className=\"form-label required\">Mô tả</label>\n              <input\n                type=\"text\" className=\"form-control form-control-solid\"\n                name=\"short_content\" value={values.short_content} onChange={handleChange}\n              />\n            </div>\n            <div className=\"d-flex row-2\">\n              <div className=\"column  my-3\">\n                <label className=\"form-label required\">Tag</label>\n                <div className=\"column\">\n                  <SelectTag value={values.tag_id} onChange={(e) => {\n                    setFieldValue('tag_id', e.target.value);\n                    setFieldValue('category_id', '')\n                  }} />\n                </div>\n                {\n                  touched.tag_id && errors.tag_id &&\n                  <span className=\"text-danger fs-8\">{errors.tag_id}</span>\n                }\n              </div>\n              <div className=\"column  my-3\">\n                <label className=\"form-label required\">Danh mục dịch vụ</label>\n                <div className=\"column\">\n                  <SelectCategory\n                    tag_id={values.tag_id} disabled={!values.tag_id || values.tag_id === ''}\n                    value={values.category_id}\n                    onChange={(e) => setFieldValue('category_id', e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-end mt-6\">\n              <LoadingButton loading={isLoading} type=\"submit\" color=\"success\" variant=\"contained\">\n                Lưu\n              </LoadingButton>\n              {\n                id &&\n                <LoadingButton onClick={() => refetch()} loading={isFetching} className=\"mx-2\" type=\"button\" variant=\"outlined\">\n                  Khôi phục\n                </LoadingButton>\n              }\n            </div>\n          </form>\n        </div>\n        <ProductMedia />\n        <ProductBranches />\n        <ProductSize />\n      </>\n    </RoleLayout>\n  );\n}\n\n\n\nconst ProductSize: FC = () => {\n  return (\n    <div className=\"card p-4 my-4\">\n      <span className=\"text-dark fw-bold fs-6\">Size/loại</span>\n    </div>\n  )\n}\n\nexport default ProductForm;"],"names":["ProductMedia","id","useParams","handlePostMedia","useMedia","useFormik","initialValues","medias","onSubmit","values","setFieldValue","useQuery","queryKey","QR_KEY","queryFn","_product","enabled","onSuccess","data","context","map","i","media","refetch","isFetching","useMutation","mutationFn","body","mutate","isLoading","onRemoveMedia","filter","a","media_ids","className","index","mime_type","controls","src","original_url","alt","Chip","color","variant","onDelete","CircularProgress","size","onChange","e","callBack","multi","LoadingButton","disabled","onClick","loading","type","ProductBranches","client","useQueryClient","invalidateQueries","mutateAsync","branch_id","quantity","validationSchema","Yup","required","Number","resetForm","handleChange","handleSubmit","permissionPath","RProduct","value","target","style","width","margin","name","Tr","item","useState","setQuantity","resolve","usePermission","branch","mutateUpdate","mutateDelete","isLoadingDelete","disable","status","checked","moment","created_at","format","ProductSize","navigate","useNavigate","useMessage","result","notification","message","openAlert","onClose","isLoadingMedia","setTimeout","PProduct","onError","err","response","thumbnail_url","price_original","undefined","price","price_special","short_content","tag_id","category_id","pickBy","identity","errors","touched","title","open","severity","resetOriginalResult","label"],"sourceRoot":""}