{"version":3,"file":"static/js/276.d13f5bbe.chunk.js","mappings":"mRAoHA,MAvGA,WAAuB,IAAD,EACZA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAuDE,EAAAA,EAAAA,MAA/CC,EAAR,EAAQA,gBAA4BC,EAApC,EAAyBC,UACzB,GAAsEC,EAAAA,EAAAA,IAAsB,CAC1FC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,cAAe,GACfC,MAAO,KACPC,QAAQ,GAEVC,SAAU,SAACC,GACTC,QAAQC,IAAIF,MAVRA,EAAR,EAAQA,OAAgBG,GAAxB,EAAgBC,OAAhB,EAAwBD,cAAcE,EAAtC,EAAsCA,aAAcC,EAApD,EAAoDA,cAapD,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,SAAU,CAACC,EAAAA,GAAAA,OAAexB,GAC1ByB,QAAS,kBAAMC,EAAAA,GAAAA,SAAiB1B,GAAM,IACtC2B,UAAW3B,EACX4B,UAAW,SAACC,GACV,IAAQC,EAAYD,EAAZC,QACRT,EAAc,OAAQS,EAAQtB,MAC9Ba,EAAc,SAAUS,EAAQjB,QAChCQ,EAAc,QAASS,EAAQrB,OAC/BY,EAAc,UAAWS,EAAQpB,SACjCW,EAAc,gBAAiBS,EAAQnB,kBAU3C,OApBA,EAAQoB,QAAR,EAAiBC,YAqBf,SAAC,KAAD,CAAYC,eAAgBC,EAAAA,GAAAA,KAAcC,YAAU,EAApD,UACE,iCACE,SAAC,KAAD,CAAWC,MAAOpC,EAAK,kCAAuB,oCAC9C,gBAAKqC,UAAU,WAAf,UACE,kBAAMvB,SAAUM,EAAciB,UAAU,OAAxC,WACE,gBAAKA,UAAU,qCAAf,UACE,iBAAKA,UAAU,eAAf,WACE,gBAAKC,KAAK,UAAAvB,EAAOH,aAAP,eAAc2B,eAAgB,GAAIC,IAAI,MAChD,gBAAKH,UAAU,iBAAf,UACE,SAAC,KAAD,CAAWI,QAASrC,EAAgBJ,GAAG,cAAc0C,SAjB/C,SAACC,GACrBxC,EAAgB,CACdwC,EAAAA,EACAC,qBAAqB,EACrBC,SAAU,SAAChB,GAAD,OAAUR,EAAc,QAASQ,EAAK,kBAiB1C,gBAAKQ,UAAU,cAAf,UACE,SAAC,KAAD,CACES,MAAM,qBACNC,MAAOhC,EAAOF,OACd6B,SAAU,SAACC,GAAD,OAAOtB,EAAc,SAAUsB,EAAEK,OAAOC,eAGtD,iBAAKZ,UAAU,cAAf,WACE,kBAAOA,UAAU,sBAAjB,kCACA,kBAAO7B,KAAK,OAAOuC,MAAOhC,EAAOP,KAAMkC,SAAUxB,EAAcgC,KAAK,OAClEb,UAAU,wCAGd,iBAAKA,UAAU,uCAAf,WACE,iBAAKA,UAAU,gBAAf,WACE,kBAAOA,UAAU,sBAAjB,oCACA,kBACE7B,KAAK,QAAQuC,MAAOhC,EAAON,MAAOiC,SAAUxB,EAC5CmB,UAAU,wCAGd,iBAAKA,UAAU,gBAAf,WACE,kBAAOA,UAAU,sBAAjB,sBACA,kBACE7B,KAAK,UAAUuC,MAAOhC,EAAOL,QAASgC,SAAUxB,EAChDmB,UAAU,2CAIhB,iBAAKA,UAAU,cAAf,WACE,kBAAOA,UAAU,sBAAjB,qCACA,kBAAO7B,KAAK,gBAAgBuC,MAAOhC,EAAOJ,cAAe+B,SAAUxB,EAAcgC,KAAK,OACpFb,UAAU,wCAGd,iBAAKA,UAAU,kCAAf,WACE,SAACc,EAAA,EAAD,CAAeD,KAAK,SAASE,MAAM,UAAUC,QAAQ,YAArD,sBAIErD,IACA,SAACmD,EAAA,EAAD,CAAed,UAAU,OAAOa,KAAK,SAASG,QAAQ,WAAtD","sources":["app/pages/branches/branch-from.tsx"],"sourcesContent":["import { LoadingButton } from \"@mui/lab\";\nimport { PageTitle, RoleLayout, SwitchButton, UploadBtn } from \"app/components\";\nimport { RBranch } from \"app/constants\";\nimport { useFormik } from \"formik\";\nimport { useParams } from \"react-router-dom\";\nimport \"./style.scss\"\nimport { BranchBody } from \"app/models\";\nimport { useMedia } from \"app/hooks\";\nimport { ChangeEvent } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { QR_KEY } from \"configs\";\nimport { _branch } from \"app/apis\";\n\nfunction BranchFrom() {\n  const { id } = useParams()\n  const { handlePostMedia, isLoading: isLoadingMedia } = useMedia()\n  const { values, errors, handleChange, handleSubmit, setFieldValue } = useFormik<BranchBody>({\n    initialValues: {\n      name: '',\n      email: '',\n      hotline: '',\n      short_address: '',\n      media: null,\n      status: false\n    },\n    onSubmit: (values) => {\n      console.log(values)\n    }\n  })\n  const { refetch, isFetching } = useQuery({\n    queryKey: [QR_KEY.branch, id],\n    queryFn: () => _branch.findById(id || 0),\n    enabled: !!id,\n    onSuccess: (data) => {\n      const { context } = data\n      setFieldValue('name', context.name)\n      setFieldValue('status', context.status)\n      setFieldValue('email', context.email)\n      setFieldValue('hotline', context.hotline)\n      setFieldValue('short_address', context.short_address)\n    }\n  })\n  const onChangeMedia = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostMedia({\n      e,\n      resetOriginalResult: true,\n      callBack: (data) => setFieldValue('media', data[0])\n    })\n  }\n  return (\n    <RoleLayout permissionPath={RBranch.POST} isNavigate>\n      <>\n        <PageTitle title={id ? \"Thay đổi thông tin\" : \"Tạo mới chi nhánh\"} />\n        <div className=\"card p-4\">\n          <form onSubmit={handleSubmit} className=\"form\">\n            <div className=\"my-3 d-flex justify-content-center\">\n              <div className=\"avatar-image\">\n                <img src={values.media?.original_url || ''} alt=\"\" />\n                <div className=\"btn-avatar-cnt\">\n                  <UploadBtn loading={isLoadingMedia} id=\"file_avatar\" onChange={onChangeMedia} />\n                </div>\n              </div>\n            </div>\n            <div className=\"column my-3\">\n              <SwitchButton\n                label=\"Trạng thái\"\n                value={values.status}\n                onChange={(e) => setFieldValue('status', e.target.checked)}\n              />\n            </div>\n            <div className=\"column my-3\">\n              <label className=\"form-label required\">Tên chi nhánh</label>\n              <input name='name' value={values.name} onChange={handleChange} type=\"text\"\n                className=\"form-control form-control-solid\"\n              />\n            </div>\n            <div className=\"d-flex justify-content-between row-2\">\n              <div className=\"column-2 my-3\">\n                <label className=\"form-label required\">Email liên hệ</label>\n                <input\n                  name=\"email\" value={values.email} onChange={handleChange}\n                  className=\"form-control form-control-solid\"\n                />\n              </div>\n              <div className=\"column-2 my-3\">\n                <label className=\"form-label required\">Hotline</label>\n                <input\n                  name=\"hotline\" value={values.hotline} onChange={handleChange}\n                  className=\"form-control form-control-solid\"\n                />\n              </div>\n            </div>\n            <div className=\"column my-3\">\n              <label className=\"form-label required\">Địa chỉ</label>\n              <input name=\"short_address\" value={values.short_address} onChange={handleChange} type=\"text\"\n                className=\"form-control form-control-solid\"\n              />\n            </div>\n            <div className=\"d-flex justify-content-end mt-6\">\n              <LoadingButton type=\"submit\" color=\"success\" variant=\"contained\">\n                Lưu\n              </LoadingButton>\n              {\n                id &&\n                <LoadingButton className=\"mx-2\" type=\"button\" variant=\"outlined\">\n                  Khôi phục\n                </LoadingButton>\n              }\n            </div>\n          </form>\n        </div>\n      </>\n    </RoleLayout>\n  );\n}\n\nexport default BranchFrom;"],"names":["id","useParams","useMedia","handlePostMedia","isLoadingMedia","isLoading","useFormik","initialValues","name","email","hotline","short_address","media","status","onSubmit","values","console","log","handleChange","errors","handleSubmit","setFieldValue","useQuery","queryKey","QR_KEY","queryFn","_branch","enabled","onSuccess","data","context","refetch","isFetching","permissionPath","RBranch","isNavigate","title","className","src","original_url","alt","loading","onChange","e","resetOriginalResult","callBack","label","value","target","checked","type","LoadingButton","color","variant"],"sourceRoot":""}