{"version":3,"file":"static/js/359.15e3ad9a.chunk.js","mappings":"4OA+FA,UApFA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAyEE,EAAAA,EAAAA,MAAjEC,EAAR,EAAQA,OAAR,IAAgBC,aAAgBC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,MAAOC,EAAhD,EAAgDA,UAAaC,EAA7D,EAA6DA,QACrDC,GAAYC,EAAAA,EAAAA,IAAcC,EAAAA,GAAAA,QAA1BF,QACR,GAA8BG,EAAAA,EAAAA,aAAY,CACxCC,WAAY,SAACC,GAAD,OAAoBd,EAAKe,EAAAA,GAAAA,OAAaf,EAAIc,GAAQC,EAAAA,GAAAA,OAAaD,IAC3EE,UAAW,kBAAMb,EAAO,CACtBE,QAASL,EAAK,sCAAwB,qCACtCM,MAAO,aAETW,QAAS,kBAAMd,EAAO,CACpBE,QAAS,8BACTC,MAAO,aARHY,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAWVC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,YAAa,GACbC,QAAQ,GAEVC,SAAU,SAACC,GAAD,OAAYT,EAAOS,MAE/B,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,SAAU,CAACC,EAAAA,GAAAA,WAAmB9B,GAC9B+B,QAAS,kBAAMhB,EAAAA,GAAAA,SAAef,GAAM,IACpCgC,WAAYhC,IAAMS,GAClBO,UAAW,SAACiB,GAAU,IAAD,QACnBb,EAAOc,cAAc,OAArB,UAA6BD,EAAKE,eAAlC,aAA6B,EAAcZ,MAC3CH,EAAOc,cAAc,SAArB,UAA+BD,EAAKE,eAApC,aAA+B,EAAcV,QAC7CL,EAAOc,cAAc,cAArB,UAAoCD,EAAKE,eAAzC,iBAAoC,EAAcX,mBAAlD,aAAoC,EAA2BY,KAAI,SAAAC,GAAC,OAAIA,EAAEC,WAAWtC,UAPjFuC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAUjB,OACE,SAAC,KAAD,CAAYC,eAAqB9B,EAAAA,GAAAA,KAAyB+B,YAAU,EAApE,UACE,iCACE,SAAC,KAAD,CACEC,KAAMpC,EACNC,QAASA,EACToC,SAAUtC,EACVD,QAASA,KAEX,SAAC,KAAD,CAAWwC,MAAM,yBACjB,gBAAKC,UAAU,YAAf,UACE,kBAAMpB,SAAUN,EAAO2B,aAAcD,UAAU,iBAA/C,WACE,iBAAKA,UAAU,6BAAf,WACE,SAAC,IAAD,CAAeE,QAAS7B,EAAW8B,KAAK,SAAS3C,MAAM,UAAU4C,QAAQ,YAAzE,sBAIElD,IACA,SAAC,IAAD,CAAemD,QAAS,kBAAMZ,KAAWS,QAASR,EAAYM,UAAU,OAAOG,KAAK,SAASC,QAAQ,WAArG,mCAKJ,gBAAKJ,UAAU,cAAf,UACE,SAAC,KAAD,CACEM,MAAOhC,EAAOO,OAAOF,OACrB4B,SAAU,SAACC,GAAD,OAAOlC,EAAOc,cAAc,SAAUoB,EAAEC,OAAOC,UACzDC,MAAM,0BAGV,iBAAKX,UAAU,cAAf,WACE,kBAAOA,UAAU,sBAAjB,gCACA,kBACEvB,KAAK,OACL6B,MAAOhC,EAAOO,OAAOJ,KACrB8B,SAAUjC,EAAOsC,aACjBT,KAAK,OAAOH,UAAU,kCACtBa,YAAY,0BAGhB,SAAC,KAAD,CACEC,eAAgBxC,EAAOO,OAAOH,YAC9B6B,SAAU,SAACC,GAAD,OAAOlC,EAAOc,cAAc,cAAeoB","sources":["app/pages/roles/role-form.tsx"],"sourcesContent":["import { LoadingButton } from \"@mui/lab\";\nimport { _role } from \"app/apis\";\nimport { PageTitle, RoleLayout, SelectPermission, Snack, SwitchButton } from \"app/components\";\nimport { RRole } from \"app/constants\";\nimport { useMessage, usePermission } from \"app/hooks\";\nimport { RoleBody } from \"app/models\";\nimport { QR_KEY } from \"configs\";\nimport { useFormik } from \"formik\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\n\nfunction RoleForm() {\n  const { id } = useParams()\n  const { result, notification: { message, color, openAlert }, onClose } = useMessage()\n  const { resolve } = usePermission(RRole.GET_ID)\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (body: RoleBody) => id ? _role.update(id, body) : _role.create(body),\n    onSuccess: () => result({\n      message: id ? 'Cập nhật thành công' : 'Tạo mới thành công',\n      color: 'success'\n    }),\n    onError: () => result({\n      message: 'Có lỗi xảy ra!',\n      color: 'error'\n    })\n  })\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      permissions: [],\n      status: true\n    },\n    onSubmit: (values) => mutate(values)\n  })\n  const { refetch, isFetching } = useQuery({\n    queryKey: [QR_KEY.permission, id],\n    queryFn: () => _role.findById(id || 0),\n    enabled: !!(id && resolve),\n    onSuccess: (data) => {\n      formik.setFieldValue('name', data.context?.name)\n      formik.setFieldValue('status', data.context?.status)\n      formik.setFieldValue('permissions', data.context?.permissions?.map(i => i.permission.id))\n    }\n  })\n  return (\n    <RoleLayout permissionPath={id ? RRole.POST : RRole.POST} isNavigate>\n      <>\n        <Snack\n          open={openAlert}\n          onClose={onClose}\n          severity={color}\n          message={message}\n        />\n        <PageTitle title=\"Cấp quyền\" />\n        <div className=\"card py-4\">\n          <form onSubmit={formik.handleSubmit} className=\"py-4 px-8 form\">\n            <div className=\"d-flex justify-content-end\">\n              <LoadingButton loading={isLoading} type=\"submit\" color=\"success\" variant=\"contained\">\n                Lưu\n              </LoadingButton>\n              {\n                id &&\n                <LoadingButton onClick={() => refetch()} loading={isFetching} className=\"mx-2\" type=\"button\" variant=\"outlined\">\n                  Khôi phục\n                </LoadingButton>\n              }\n            </div>\n            <div className=\"column my-3\">\n              <SwitchButton\n                value={formik.values.status}\n                onChange={(e) => formik.setFieldValue('status', e.target.checked)}\n                label=\"Trạng thái\"\n              />\n            </div>\n            <div className=\"column my-3\">\n              <label className=\"form-label required\">Tên quyền</label>\n              <input\n                name=\"name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                type=\"text\" className=\"form-control form-control-solid\"\n                placeholder=\"Tên quyền\"\n              />\n            </div>\n            <SelectPermission\n              permission_ids={formik.values.permissions}\n              onChange={(e) => formik.setFieldValue('permissions', e)}\n            />\n          </form>\n        </div>\n      </>\n    </RoleLayout>\n  );\n}\n\nexport default RoleForm;"],"names":["id","useParams","useMessage","result","notification","message","color","openAlert","onClose","resolve","usePermission","RRole","useMutation","mutationFn","body","_role","onSuccess","onError","mutate","isLoading","formik","useFormik","initialValues","name","permissions","status","onSubmit","values","useQuery","queryKey","QR_KEY","queryFn","enabled","data","setFieldValue","context","map","i","permission","refetch","isFetching","permissionPath","isNavigate","open","severity","title","className","handleSubmit","loading","type","variant","onClick","value","onChange","e","target","checked","label","handleChange","placeholder","permission_ids"],"sourceRoot":""}