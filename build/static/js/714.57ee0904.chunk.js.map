{"version":3,"file":"static/js/714.57ee0904.chunk.js","mappings":"uLAGaA,EAAgB,SAACC,GAC1B,IAAIC,GAAU,EACNC,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,EAAaF,EAAMG,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,QACnCC,EAAcP,EAAMQ,SAAQ,SAAAJ,GAAC,OAAIA,EAAEC,KAAKE,eAAaJ,KAAI,SAAAC,GAAC,OAAIA,EAAEK,cAItE,OAHIP,EAAWQ,SAASC,EAAAA,KAAcJ,EAAYJ,KAAI,SAAAC,GAAC,OAAIA,EAAEQ,QAAMF,SAASZ,MACxEC,GAAU,GAEP,CACHA,QAAAA,K,mIC+BR,UAjCA,WACI,IAAQc,GAAOC,EAAAA,EAAAA,MAAPD,GACAd,GAAYF,EAAAA,EAAAA,GAAckB,EAAAA,GAAAA,QAA1BhB,QAYAiB,IAXOC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,QAAQ,GAEZC,SAAU,SAACC,GACPC,QAAQC,IAAIF,OAGHG,EAAAA,EAAAA,UAAS,CACtBC,SAAU,CAACC,EAAAA,GAAAA,QAAgBhB,GAC3BiB,QAAS,kBAAMC,EAAAA,EAAAA,SAAkBlB,GAAM,IACvCmB,WAAYnB,IAAMd,KAHdiB,MAOR,OAFAS,QAAQC,IAAIV,IAGR,SAAC,KAAD,CAAYlB,eAAgBe,EAAKE,EAAAA,GAAAA,IAAeA,EAAAA,GAAAA,KAAekB,YAAU,EAAzE,UACI,UAAC,EAAAC,SAAD,YACI,SAAC,KAAD,CAAWC,MAAOtB,EAAK,kCAAuB,yCAC9C,gBAAKuB,UAAU,WAAf","sources":["app/hooks/usePermission.ts","app/pages/accounts/account-form.tsx"],"sourcesContent":["import { CODE_SPA } from \"app/constants\"\nimport { useAuth } from \"app/modules/auth\"\n\nexport const usePermission = (permissionPath: string) => {\n    let resolve = false\n    const { roles } = useAuth()\n    const roles_code = roles.map(i => i.role.code)\n    const permissions = roles.flatMap(i => i.role.permissions).map(i => i.permission)\n    if (roles_code.includes(CODE_SPA) || (permissions.map(i => i.path).includes(permissionPath))) {\n        resolve = true\n    }\n    return {\n        resolve\n    }\n}","import { _account } from \"app/apis\";\nimport { PageTitle, RoleLayout } from \"app/components\";\nimport { RAccount } from \"app/constants\";\nimport { usePermission } from \"app/hooks\";\nimport { QR_KEY } from \"configs\";\nimport { useFormik } from \"formik\";\nimport { Fragment } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\n\nfunction AccountForm() {\n    const { id } = useParams()\n    const { resolve } = usePermission(RAccount.GET_ID)\n    const formik = useFormik({\n        initialValues: {\n            fullname: '',\n            email: '',\n            telephone: '',\n            status: false,\n        },\n        onSubmit: (values) => {\n            console.log(values)\n        }\n    })\n    const { data } = useQuery({\n        queryKey: [QR_KEY.account, id],\n        queryFn: () => _account.findById(id || 0),\n        enabled: !!(id && resolve)\n    })\n    console.log(data)\n\n    return (\n        <RoleLayout permissionPath={id ? RAccount.PUT : RAccount.POST} isNavigate>\n            <Fragment>\n                <PageTitle title={id ? \"Thay đổi thông tin\" : \"Tạo mới tài khoản\"} />\n                <div className=\"card p-4\">\n                    AccountForm\n                </div>\n            </Fragment>\n        </RoleLayout>\n    );\n}\n\nexport default AccountForm;"],"names":["usePermission","permissionPath","resolve","roles","useAuth","roles_code","map","i","role","code","permissions","flatMap","permission","includes","CODE_SPA","path","id","useParams","RAccount","data","useFormik","initialValues","fullname","email","telephone","status","onSubmit","values","console","log","useQuery","queryKey","QR_KEY","queryFn","_account","enabled","isNavigate","Fragment","title","className"],"sourceRoot":""}